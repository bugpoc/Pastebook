@model PastebookEntityLibrary.USER


@using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { id = "formRegister" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RegisterViewModel</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.USER_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.USER_NAME, new { htmlAttributes = new { @class = "form-control", id = "txtUsername" } })
                @Html.ValidationMessageFor(model => model.USER_NAME, "", new { @class = "text-danger" })
                <span id="msgForUsername" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FIRST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FIRST_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LAST_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LAST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LAST_NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMAIL_ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMAIL_ADDRESS, new { htmlAttributes = new { @class = "form-control", id = "txtEmail" } })
                @Html.ValidationMessageFor(model => model.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                <span id="msgForEmail" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control", id = "txtPassword" } })
                @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="ConfirmPassword" class="control-label col-md-2">ConfirmPassword</label>
            <div class="col-md-10">
                <input id="txtConfirmPassword" name="CONFIRM_PASSWORD" type="password" class="form-control" />
                <span id="confirmPasswordMessage" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BIRTHDAY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BIRTHDAY, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BIRTHDAY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GENDER, new List<SelectListItem>() {
                    new SelectListItem {Text = "Select Gender",   Value = "U"},
                    new SelectListItem {Text = "Male",   Value = "M"},
                    new SelectListItem {Text = "Female", Value = "F"}
               }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            <div class="form-group">
                @Html.LabelFor(model => model.COUNTRY_ID, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.COUNTRY_ID, (IEnumerable<SelectListItem>)ViewBag.CountryList, "Select Country", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.COUNTRY_ID)
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.MOBILE_NO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MOBILE_NO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MOBILE_NO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-default" />
            </div>
        </div>
    </div>
            }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/register.js"></script>
}